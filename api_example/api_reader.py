import requests
import pandas as pd
from datetime import datetime
import os


class FoxAPIReader:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Random Fox API"""

    def __init__(self):
        self.base_url = "https://randomfox.ca/floof/"
        self.data = None

    def fetch_fox_data(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–ª—É—á–∞–π–Ω–æ–π –ª–∏—Å–µ –∏–∑ API"""
        try:
            response = requests.get(self.base_url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ HTTP

            self.data = response.json()
            print(" –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã!")
            return self.data

        except requests.exceptions.RequestException as e:
            print(f" –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {e}")
            return None

    def to_dataframe(self):
        """–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Pandas DataFrame"""
        if self.data is None:
            print(" –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ fetch_fox_data()")
            return None

        try:
            # –°–æ–∑–¥–∞–µ–º DataFrame –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            df_data = {
                'image_url': [self.data.get('image', '')],
                'link': [self.data.get('link', '')],
                'timestamp': [datetime.now().strftime('%Y-%m-%d %H:%M:%S')]
            }

            df = pd.DataFrame(df_data)
            print(" –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω—ã –≤ DataFrame!")
            return df

        except Exception as e:
            print(f" –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ DataFrame: {e}")
            return None

    def display_info(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        if self.data is None:
            print(" –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            return

        print("\n" + "=" * 50)
        print(" –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–õ–£–ß–ê–ô–ù–û–ô –õ–ò–°–ï")
        print("=" * 50)
        print(f"üñº URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {self.data.get('image', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
        print(f" –°—Å—ã–ª–∫–∞: {self.data.get('link', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
        print("=" * 50)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å API"""
    print(" –ó–∞–ø—É—Å–∫ Fox API Reader...")

    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞
    fox_reader = FoxAPIReader()

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API
    fox_data = fox_reader.fetch_fox_data()

    if fox_data:
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        fox_reader.display_info()

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ DataFrame
        df = fox_reader.to_dataframe()

        if df is not None:
            # –í—ã–≤–æ–¥–∏–º DataFrame
            print("\n Pandas DataFrame:")
            print(df)

            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ DataFrame
            print(f"\n –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ DataFrame:")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {len(df)}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤: {len(df.columns)}")
            print(f"   –°—Ç–æ–ª–±—Ü—ã: {list(df.columns)}")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            csv_filename = f"fox_data_{datetime.now().strftime('%Y%m%d_%H%M%S')}.csv"
            df.to_csv(csv_filename, index=False)
            print(f" –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {csv_filename}")

    print("\n –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    main()